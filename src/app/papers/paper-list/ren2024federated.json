{
  "title": "Federated Learning With Potential Partnership Identification for Accurate Prediction in Flexible Manufacturing System",
  "type": "technical",
  "authors": [
    "Chao Ren",
    "Bin Jiang",
    "Ningyun Lu"
  ],
  "year": "2024-08",
  "labels": [
    "federated learning",
    "collaboration",
    "coalition",
    "editing"
  ],
  "summaries": [
    "identify potential cooperative relationships by leveraging SOINN to generate prototype samples representing the original distribution, and using K-Means to cluster prototypes and determine partnership by examing the clustering results"
  ],
  "systemModel": [
    "Problems & Objectives",
    [
      "__Problems__",
      [
        "It is difficult for a single industrial user to collect a comprehensive dataset, because",
        [
          "assembling sensors on a machine equipment (especially high-end) will compomise the reliability and security of this equipment",
          "modifying a pilot machine cannot reflect all the working conditions of this machine",
          "data acquisition on machine equipments is time-consuming, labor-intensive and requires professional domain knowledge"
        ],
        "industrial users with similar production lines are reluctant to collaborate due to conflict of interests",
        "FL can be used as a collaboration scheme between industrial users, this collaboration needs to be reached before FL starts without privacy leakage",
        [
          "most existing studies in FL just solved \"how to collaborate\" during the training process, but didn't solve \"find collaborators\"",
          [
            "existing studies focusing on clustering mechanisms _during the training process_ do not count. In addition, they incur significant computing and communication resources when forming clusters in large-scale setting",
            "existing studies on utilizing graph FL to evaluate the relationship of clients after training has started also do not count"
          ]
        ]
      ],
      "__Objective__",
      [
        "to identify potential cooperative relationships before participants collaborate, in which",
        [
          "an self-organizing incremental neural network (SOINN) is used to generate prototype samples in an unsupervised manner that can represent the distribution of the original samples transforming the evaluation of user data quality into a problem of evaluating prototype samples. ",
          "__Note__: only $x$ is shared and $y$ is not shared. So it preserved the privacy",
          "K-means clustering is to cluster prototypes generated from SOINN",
          "A voting mechanism is to determine to which cluster a participant belongs by examing his prototypes"
        ]
      ]
    ],
    "Weakness",
    [
      "Computational Complexity",
      [
        "The process of generating prototypes and clustering can be computationally intensive, especially for large-scale datasets."
      ],
      "Dependence on Prototype Quality",
      [
        "The effectiveness of the framework relies heavily on the quality of the prototypes generated by SOINN. Poor prototypes can lead to incorrect coalition formation."
      ],
      "Limited to Similar Data Distributions",
      [
        "The framework assumes that users with similar data distributions will benefit from collaboration. However, in some cases, users with dissimilar data distributions might still benefit from collaboration, which this framework does not account for.",
        [
          "dissimilar data distributions have complementary information and improve the model's generalization ability.",
          "In some cases, knowledge from dissimilar data distributions can be transferred to improve model performance, especially when the target domain has limited data.",
          " A diverse dataset (even if distributions are dissimilar) can help the model learn more robust features, reducing the risk of overfitting"
        ]
      ]
    ],
    "Players & Notations",
    [
      "$N$ industrial users, each user $a$",
      [
        "$D_a = \\{X_a, Y_a\\}$: Data held by the $a$-th user, where $X_a$ is the feature set and $Y_a$ is the label set",
        "$M^a(\\theta^a)$: Model learned by the $a$-th user with parameters $\\theta^a$.",
        "$n_a$: Data size of the $a$-th user.",
        "$p_a$: Prototype set for the $a$-th user",
        "$U_a$: Optimal coalition for the $a$-th user"
      ]
    ],
    "Steps for Potential Partnership Identification",
    [
      "Data Compression and Reconstruction<ol>",
      "Cluster Analysis",
      "Coalition Formation",
      "Federated Model Training"
    ]
  ],
  "techniques": [
    "Data Compression and Reconstruction:",
    [
      "Initialization<ol>",
      [
        "Randomly select two initial samples to create an initial prototype set: $p_a = \\{c_1, c_2\\}, \\quad c_1, c_2 \\in \\mathbb{R}^S$"
      ],
      "Prototype Update",
      [
        "For each new sample $x_i^a$",
        [
          "Find the Two Nearest Prototypes<ol>",
          [
            "$s_{a1} = \\argmin\\limits_{c \\in p_a} ||x_i^a - c||$",
            "$s_{a2} = \\argmin\\limits_{c \\in p_a \\setminus \\{s_{a1}\\}} ||x_i^a - c||$",
            [
              "a neighborhood relationship (edge) is established between $s_{a1}$ and $s_{a2}$ as they are activated together",
              "Over time, if two prototypes are not frequently activated together, the neighborhood relationship (edge) between them is deleted"
            ]
          ],
          "Calculate Distance Thresholds",
          [
            "$T_{s_{a1}} = \\max\\limits_{c \\in B_{s_{a1}}} ||s_{a1} - c|| \\quad \\text{(if one prototype } s_{a1} \\text{ has neighbors)}$",
            "$ T_{s_{a1}} = \\min\\limits_{c \\in p_a \\setminus \\{s_{a1}\\}} ||s_{a1} - c|| \\quad \\text{(if } s_{a1} \\text{has no neighbors)}$",
            "same for $s_{a2}$"
          ],
          "Decide Whether to Add a New Prototype",
          [
            "If $||x_i^a - s_{a1}|| > T_{s_{a1}}$ or $||x_i^a - s_{a2}|| > T_{s_{a2}}$, add $x_i^a$ as a new prototype: $p_a = p_a \\cup \\{x_i^a\\}$",
            "otherwise, update prototypes",
            [
              "$s_{a1} = s_{a1} + \\epsilon(x_i^a - s_{a1})$",
              "$s_{a2} = s_{a2} + \\epsilon(x_i^a - s_{a2})$",
              [
                "$\\epsilon$: the step size for the update process"
              ]
            ]
          ]
        ]
      ],
      "Prototype Set",
      [
        "After processing all samples, each user $a$ has a prototype set $p_a$ that represents the distribution of their raw data."
      ]
    ],
    "Cluster Analysis for Prototypes",
    [
      "Prototype Aggregation<ol>",
      [
        "Collect all prototype sets $P = \\{p_1, p_2, \\dots, p_N\\}$ from $N$ users."
      ],
      "Cluster Initialization",
      [
        "Randomly select $K$ initial cluster centers $\\{\\mu_1, \\mu_2, \\dots, \\mu_K\\}$ from $P$"
      ],
      "Cluster Assignment",
      [
        "Assign each prototype $c_i$ to the nearest cluster center: $C(i) = \\argmin_k ||c_i - \\mu_k||^2$"
      ],
      "Cluster Center Update",
      [
        "Update the cluster centers based on the mean of the prototypes assigned to each cluster: $ \\mu_k = \\frac{\\sum_{i=1}^{n_P'} 1\\{C(i) = k\\} c_i}{\\sum_{i=1}^{n_P'} 1\\{C(i) = k\\}}$"
      ],
      "Iteration: Repeat the cluster assignment and center update steps until convergence",
      "Cluster Formation",
      [
        "At the end of this process, all prototypes are grouped into $K$ clusters $C_1, C_2, \\dots, C_K$"
      ]
    ],
    "Coalition Formation for Users",
    [
      "Prototype Voting",
      [
        "For each user $a$, count how many of their prototypes $p_a = \\{c_1, c_2, \\dots, c_{n_a'}\\}$ belong to each cluster"
      ],
      "Majority Vote",
      [
        "The cluster that receives the most votes from a user's prototypes is selected as the optimal coalition for that user"
      ],
      "Coalition Formation",
      [
        "Users who belong to the same cluster are grouped into the same coalition. These coalitions represent groups of users with similar data distributions"
      ]
    ]
  ],
  "doi": "10.1109/TR.2024.3427813",
  "id": "ren2024federated",
  "bibtex": "@article{ren2024federated, title={Federated Learning With Potential Partnership Identification for Accurate Prediction in Flexible Manufacturing System}, author={Ren, Chao and Jiang, Bin and Lu, Ningyun}, journal={IEEE Transactions on Reliability}, year={2024}, publisher={IEEE}}"
}