{
  "title": "Central server free federated learning over single-sided trust social networks",
  "authors": [
    "Chaoyang He",
    "Conghui Tan",
    "Hanlin Tang",
    "Shuang Qiu",
    "Ji Liu"
  ],
  "type": "technical",
  "year": "2019-10",
  "editing": false,
  "labels": [
    "federated learning",
    "social network",
    "collaboration"
  ],
  "summaries": [
    "in the FL social network, proposed __an online distributed learning algorithm__ by pushing local model to trusted neighbors and aggregating locally",
    "this algorithm borrows a 2-step idea: local train and push local model to trusted neighbors, then each node aggregate into a new model"
  ],
  "systemModel": [
    "Motivations & Objectives",
    [
      "**Motivations**",
      [
        "**Privacy Concerns**: Traditional federated learning (FL) relies on a central server, which poses risks of data leakage and privacy breaches.",
        "**Communication Bottlenecks**: Centralized FL suffers from high communication costs and scalability issues as the number of clients grows.",
        "**Single-sided Trust Networks**: Real-world social networks often have asymmetric trust relationships (e.g., user A trusts user B, but not vice versa), which existing FL frameworks cannot handle."
      ],
      "**Objectives**",
      [
        "**Develop a Decentralized FL Algorithm**: Propose a method that operates without a central server, leveraging single-sided trust networks.",
        "**Regret Minimization**: Ensure the algorithm achieves sublinear regret, balancing adversarial and stochastic components of loss functions."
      ]
    ],
    "Players",
    [
      "$n$ clients (nodes), for each client",
      [
        "$\\mathbf{x}_t^{(i)}$: local models for client $i$ at iteration $t$"
      ],
      "$\\mathcal{G}=([n], E)$: Directed graph",
      [
        "$[n]=\\{1,2,...,n\\}$: vertex set",
        "$E\\subset [n] \\times [n]$: edge set <u>[see 1. Global Structure]</u>",
        [
          "edge $(u,v) \\in E$ indicates $u$ can send data to $v$"
        ],
        "$\\mathbf{W} \\in \\mathbb{R}^{n \\times n}$: Row-stochastic matrix",
        [
          "$W_{ij} \\geq 0$ is the weight client $i$ assigns to client $j$",
          "$\\mathcal{N}_i^{\\text{out}}=\\{j \\in [n]: W_{ij} > 0 \\}, \\mathcal{N}_i^{\\text{in}}=\\{k \\in [n]: W_{ki} > 0 \\}$ are the sets of in neighbors and out neighbors of node $i$",
          "$\\sum_{j}W_{ij}=1$"
        ],
        "$\\mathcal{R}_T = \\mathbb{E}_{\\Xi_{n,T} \\sim \\mathcal{D}_{n,T}} \\left\\{ \\sum_{t=1}^T \\sum_{i=1}^n \\left( f_{i,t}(\\mathbf{x}_t^{(i)}; \\boldsymbol{\\xi}_t^{(i)}) - f_{i,t}(\\mathbf{x}^*; \\boldsymbol{\\xi}_t^{(i)}) \\right) \\right\\},$: **total regret, which is minimized via gradient updates and push-sum averaging**"
      ]
    ],
    "Steps:",
    [
      "**Initialization**: Each client $i$ initializes its model $\\mathbf{x}_0^{(i)}=0$ and weight vector $\\omega_0^{(i)} = 1$.<ol>",
      "**Local Update** (Iteration $t$)",
      [
        "Client $i$ computes an intermediate model $\\mathbf{z}_{t+1/2}^{(i)} = \\mathbf{x}_t^{(i)} - \\gamma \\nabla f_{i,t}(\\mathbf{x}_t^{(i)}; \\boldsymbol{\\xi}_t^{(i)})$<ol>"
      ],
      "**Push-Sum Communication**",
      [
        "**Push**: Client $i$ sends $W_{ij} \\mathbf{z}_{t+1/2}^{(i)}$ to each out-neighbor $j$.",
        "**Sum**: Client $i$ aggregates received models: ",
        [
          "$\\mathbf{z}_{t+1}^{(i)} = \\sum_{j \\in \\mathcal{N}_i^{\\text{in}}} W_{ji} \\mathbf{z}_{t+1/2}^{(j)}, \\quad \\omega_{t+1}^{(i)} = \\sum_{j \\in \\mathcal{N}_i^{\\text{in}}} W_{ji} \\omega_t^{(j)}.$"
        ],
        "**Normalization**: Updates local model $\\mathbf{x}_{t+1}^{(i)} = \\mathbf{z}_{t+1}^{(i)} / \\omega_{t+1}^{(i)}$."
      ],
      "**Repeat**: Steps 2â€“3 for $T$ iterations.",
      [
        "$\\omega$ is used to normalize $\\mathbf{z}$ **but** from my calculation it never changes after 1 iteration"
      ]
    ]
  ],
  "motivation": [
    "Existing federated learning primarily adopts the central server-based network topology.",
    "mutual trusts are assumed in the state-of-the-art decentralized FL methods"
  ],
  "questions": [
    "consider a social network scenario of FL, assuming trusts are single-sided and data comes in a streaming fashion"
  ],
  "techniques": [],
  "doi": "arXiv:1910.04956",
  "id": "he2019central",
  "bibtex": "@article{he2019central, title={Central server free federated learning over single-sided trust social networks}, author={He, Chaoyang and Tan, Conghui and Tang, Hanlin and Qiu, Shuang and Liu, Ji}, journal={arXiv preprint arXiv:1910.04956}, year={2019}}"
}